{"version":3,"file":"lieu.es.min.js","sources":["../src/core/Helpers.js","../src/core/index.js","../src/core/const.js"],"sourcesContent":["class Helpers {\n    // Checks if passed data is object or not\n    static isObject(data) {\n        return typeof data === 'object';\n    }\n\n    /** Returns parsed from JSON object or null\n    @param data<JSON>\n    */\n    static fromJson(data) {\n        try {\n            const languagesFromJson = JSON.parse(data);\n\n            if (this.isObject(languagesFromJson)) {\n                return languagesFromJson;\n            } else {\n                return null;\n            }\n        } catch {\n            return null;\n        }\n    }\n}\n\nexport default Helpers;\n","import Helpers from './Helpers';\nimport { STORAGE_KEY } from './const';\n\n/**\n * @param initialData<Object>\n */\nexport default class Lieu {\n    initialData;\n    languages = null;\n    initialLanguage = null;\n    currentLanguage = null;\n    attributeName = 'data-localize';\n\n    onSetLang = (newLang, oldLang) => {};\n    onGetLang = () => {};\n\n    constructor(initialData) {\n        this.initialData = initialData;\n\n        this.initLieu();\n    }\n\n    // Class initialization\n    initLieu() {\n        this.initLanguages();\n        this.setHooks();\n        this.setAttributeName();\n        this.setInitialLanguage();\n    }\n\n    // Set class field languages if languages from inittial data is object or json\n    initLanguages() {\n        let initialLanguages = this.initialData?.languages;\n\n        if (Helpers.isObject(initialLanguages)) {\n            this.setLanguages(initialLanguages);\n        } else {\n            initialLanguages = Helpers.fromJson(initialLanguages); // return null if lang not in json\n\n            this.setLanguages(initialLanguages);\n        }\n    }\n\n    // Set hooks if they exist in inital data\n    setHooks() {\n        if (typeof this.initialData.onSetLang === 'function') {\n            this.onSetLang = this.initialData.onSetLang;\n        }\n\n        if (typeof this.initialData.onGetLang === 'function') {\n            this.onGetLang = this.initialData.onGetLang;\n        }\n    }\n\n    // Set custom data attribute\n    setAttributeName() {\n        const attr = this.initialData?.attributeName;\n\n        if (attr) {\n            this.attributeName = attr;\n        }\n    }\n\n    /** Set languages from initial data in languages class field\n    @param langs<Object>\n    */\n    setLanguages(langs) {\n        this.languages = langs;\n    }\n\n    // Set initial language from languages\n    setInitialLanguage() {\n        const langKeys = Object.keys(this.languages);\n        const initialLangName = this.initialData.initialLanguage;\n\n        if (initialLangName) {\n            for (let i = 0; i < langKeys.length; i++) {\n                if (initialLangName.includes(langKeys[i])) {\n                    this.initialLanguage = this.languages[langKeys[i]];\n\n                    this.setLang(initialLangName);\n\n                    break;\n                }\n            }\n        } else {\n            this.setInitialLanguageAuto();\n        }\n    }\n\n    // Set initial language if initial language is not set in initial data\n    setInitialLanguageAuto() {\n        // Todo improve\n        const storageLangKey = window.localStorage?.getItem(STORAGE_KEY);\n        const langKeys = Object.keys(this.languages);\n        let langKey = langKeys[0];\n\n        if (storageLangKey) {\n            for (let i = 0; i < langKeys.length; i++) {\n                if (langKeys[i] === storageLangKey) {\n                    langKey = storageLangKey;\n                    break;\n                }\n            }\n        }\n\n        this.initialLanguage = this.languages[langKey];\n\n        this.setLang(langKey);\n    }\n\n    /** Set new lang by string key from languages class field\n    @param langKey<String>\n    */\n    setLang(langKey) {\n        const oldLang = this.currentLanguage;\n\n        this.currentLanguage = this.languages[langKey];\n        window.localStorage?.setItem(STORAGE_KEY, langKey);\n\n        this.localizeDomElems();\n\n        this.onSetLang(oldLang, this.currentLanguage);\n    }\n\n    // Find all data-attributes by attributeName field in DOM, and localize them\n    localizeDomElems() {\n        const localeElems = Array.from(\n            document.querySelectorAll(`[${this.attributeName}]`)\n        );\n\n        const { locales } = this.currentLanguage;\n\n        localeElems.forEach((elem) => {\n            const locale = elem.getAttribute(this.attributeName);\n\n            const localeText = locales[locale];\n\n            elem.innerHTML = localeText;\n        });\n    }\n\n    /** Return value from currentLanguage.locales or null\n    @param localeKey<String>\n    */\n    localize(localeKey) {\n        const { locales } = this.currentLanguage;\n\n        return locales[localeKey];\n    }\n\n    /** Return value from currentLanguage.locales or null\n    @param localeKey<String>\n    */\n    __(localeKey) {\n        return this.localize(localeKey);\n    }\n\n    // Return browser language\n    getBrowserLang() {\n        return navigator?.language;\n    }\n\n    /** Return language object from languages class field by its' key\n    * or current langauge if @param langKey is not set\n    @param langKey<String> not required\n    */\n    getLang(langKey) {\n        this.onGetLang();\n\n        if (langKey) {\n            return this.languages[langKey];\n        }\n\n        return this.currentLanguage;\n    }\n\n    // Returns object of all languages\n    getLangs() {\n        return this.languages;\n    }\n}\n","const STORAGE_KEY = 'language';\n\nexport { STORAGE_KEY };\n"],"names":["Helpers","static","data","languagesFromJson","JSON","parse","this","isObject","Lieu","initialData","languages","initialLanguage","currentLanguage","attributeName","onSetLang","newLang","oldLang","onGetLang","constructor","initLieu","initLanguages","setHooks","setAttributeName","setInitialLanguage","initialLanguages","fromJson","setLanguages","attr","langs","langKeys","Object","keys","initialLangName","i","length","includes","setLang","setInitialLanguageAuto","storageLangKey","window","localStorage","getItem","langKey","setItem","localizeDomElems","localeElems","Array","from","document","querySelectorAll","locales","forEach","elem","locale","getAttribute","localeText","innerHTML","localize","localeKey","__","getBrowserLang","navigator","language","getLang","getLangs"],"mappings":";;;;;AAAA,MAAMA,EAEaC,gBAACC,GACZ,MAAuB,iBAATA,CACjB,CAKcD,gBAACC,GACZ,IACI,MAAMC,EAAoBC,KAAKC,MAAMH,GAErC,OAAII,KAAKC,SAASJ,GACPA,EAEA,IAId,CAFC,MACE,OAAO,IACV,CACJ,ECfU,MAAMK,EACjBC,YACAC,UAAY,KACZC,gBAAkB,KAClBC,gBAAkB,KAClBC,cAAgB,gBAEhBC,UAAY,CAACC,EAASC,KAAV,EACZC,UAAY,OAEZC,YAAYT,GACRH,KAAKG,YAAcA,EAEnBH,KAAKa,UAba,CAiBtBA,WACIb,KAAKc,gBACLd,KAAKe,WACLf,KAAKgB,mBACLhB,KAAKiB,oBArBa,CAyBtBH,gBACI,IAAII,EAAmBlB,KAAKG,aAAaC,UAErCV,EAAQO,SAASiB,KAGjBA,EAAmBxB,EAAQyB,SAASD,IAFpClB,KAAKoB,aAAaF,EA7BJ,CAsCtBH,WAC8C,mBAA/Bf,KAAKG,YAAYK,YACxBR,KAAKQ,UAAYR,KAAKG,YAAYK,WAGI,mBAA/BR,KAAKG,YAAYQ,YACxBX,KAAKW,UAAYX,KAAKG,YAAYQ,UA5CpB,CAiDtBK,mBACI,MAAMK,EAAOrB,KAAKG,aAAaI,cAE3Bc,IACArB,KAAKO,cAAgBc,EAE5B,CAKDD,aAAaE,GACTtB,KAAKI,UAAYkB,CA7DC,CAiEtBL,qBACI,MAAMM,EAAWC,OAAOC,KAAKzB,KAAKI,WAC5BsB,EAAkB1B,KAAKG,YAAYE,gBAEzC,GAAIqB,GACA,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAASK,OAAQD,IACjC,GAAID,EAAgBG,SAASN,EAASI,IAAK,CACvC3B,KAAKK,gBAAkBL,KAAKI,UAAUmB,EAASI,IAE/C3B,KAAK8B,QAAQJ,GAEb,KACH,OAGL1B,KAAK+B,wBAhFS,CAqFtBA,yBAEI,MAAMC,EAAiBC,OAAOC,cAAcC,QC7FhC,YD8FNZ,EAAWC,OAAOC,KAAKzB,KAAKI,WAClC,IAAIgC,EAAUb,EAAS,GAEvB,GAAIS,EACA,IAAK,IAAIL,EAAI,EAAGA,EAAIJ,EAASK,OAAQD,IACjC,GAAIJ,EAASI,KAAOK,EAAgB,CAChCI,EAAUJ,EACV,KACH,CAIThC,KAAKK,gBAAkBL,KAAKI,UAAUgC,GAEtCpC,KAAK8B,QAAQM,EAChB,CAKDN,QAAQM,GACJ,MAAM1B,EAAUV,KAAKM,gBAErBN,KAAKM,gBAAkBN,KAAKI,UAAUgC,GACtCH,OAAOC,cAAcG,QCtHT,WDsH8BD,GAE1CpC,KAAKsC,mBAELtC,KAAKQ,UAAUE,EAASV,KAAKM,gBApHX,CAwHtBgC,mBACI,MAAMC,EAAcC,MAAMC,KACtBC,SAASC,iBAAkB,IAAG3C,KAAKO,oBAGjCqC,QAAEA,GAAY5C,KAAKM,gBAEzBiC,EAAYM,SAASC,IACjB,MAAMC,EAASD,EAAKE,aAAahD,KAAKO,eAEhC0C,EAAaL,EAAQG,GAE3BD,EAAKI,UAAYD,CAAjB,GAEP,CAKDE,SAASC,GACL,MAAMR,QAAEA,GAAY5C,KAAKM,gBAEzB,OAAOsC,EAAQQ,EAClB,CAKDC,GAAGD,GACC,OAAOpD,KAAKmD,SAASC,EArJH,CAyJtBE,iBACI,OAAOC,WAAWC,QACrB,CAMDC,QAAQrB,GAGJ,OAFApC,KAAKW,YAEDyB,EACOpC,KAAKI,UAAUgC,GAGnBpC,KAAKM,eAxKM,CA4KtBoD,WACI,OAAO1D,KAAKI,SACf"}