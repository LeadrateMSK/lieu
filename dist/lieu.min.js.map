{"version":3,"file":"lieu.min.js","sources":["../src/core/helpers.js","../src/core/const.js","../src/core/index.js"],"sourcesContent":["const helpers = {\r\n    // Checks if passed object is object or not\r\n    isObject: (obj) => {\r\n        return typeof obj === 'object';\r\n    },\r\n\r\n    // Checks if passed object is funcion or not\r\n    isFunction: (func) => {\r\n        return typeof func === 'function';\r\n    },\r\n\r\n    // Returns parsed from JSON object or null\r\n    fromJson: (obj) => {\r\n        try {\r\n            const languagesFromJson = JSON.parse(obj);\r\n\r\n            if (typeof languagesFromJson === 'object') {\r\n                return languagesFromJson;\r\n            } else {\r\n                return null;\r\n            }\r\n        } catch {\r\n            return null;\r\n        }\r\n    },\r\n\r\n    // Return browser language\r\n    getBrowserLang: () => {\r\n        return navigator.language.slice(0, 2);\r\n    },\r\n\r\n    // Check key existing in object\r\n    hasKey: (key, obj) => {\r\n        return Object.keys(obj).indexOf(key) !== -1;\r\n    },\r\n};\r\n\r\nexport default helpers;\r\n","const STORAGE_KEY = 'lieu';\nconst ATTRIBUTE_NAME = 'data-lieu';\n\nexport { STORAGE_KEY, ATTRIBUTE_NAME };\n","import helpers from './helpers';\nimport { STORAGE_KEY, ATTRIBUTE_NAME } from './const';\n\n/**\n * @param initialData<Object>\n */\nexport default class Lieu {\n    #isDebug = false; // boolean\n    #initialData = null; // object\n    #languages = null; // object\n    #currentLanguage = null; // object\n    #attributeName; // string\n\n    #onSetLang = (newLang, oldLang) => {};\n    #onGetLang = () => {};\n\n    constructor(initialData) {\n        this.#initialData = initialData;\n\n        this.#isDebug = initialData.isDebug;\n\n        this.#init();\n    }\n\n    #init() {\n        this.#initLanguages();\n        this.#setAttributeName();\n        this.#setInitialLanguage();\n        this.#setHooks();\n    }\n\n    // Set class field languages if languages from initial data is object or json\n    #initLanguages() {\n        let initialLanguages = this.#initialData.languages;\n\n        if (!helpers.isObject(initialLanguages)) {\n            initialLanguages = helpers.fromJson(initialLanguages);\n        }\n\n        this.#languages = initialLanguages;\n    }\n\n    // Set hooks if they exist in initial data\n    #setHooks() {\n        if (helpers.isFunction(this.#initialData.onSetLang)) {\n            this.#onSetLang = this.#initialData.onSetLang;\n        }\n\n        if (helpers.isFunction(this.#initialData.onGetLang)) {\n            this.#onGetLang = this.#initialData.onGetLang;\n        }\n    }\n\n    // Set custom data attribute\n    #setAttributeName() {\n        this.#attributeName = this.#initialData.attributeName ?? ATTRIBUTE_NAME;\n    }\n\n    // Set initial language from languages\n    #setInitialLanguage() {\n        // const initialLang = this.#initialData.initialLanguage;\n\n        const userKeyLang =\n            localStorage.getItem(STORAGE_KEY) ?? // from storage\n            this.#initialData.initialLanguage ?? // from options\n            helpers.getBrowserLang(); // from navigator\n\n        if (helpers.hasKey(userKeyLang, this.#languages)) {\n            this.setLang(userKeyLang);\n        }\n        // else if (helpers.hasKey(initialLang, this.#languages)) {\n        // this.setLang(initialLang);\n        // }\n        else {\n            this.setLang(Object.keys(this.#languages)[0]);\n        }\n    }\n\n    /*\n     * Set new lang by string key from languages class field\n     * @param langKey<String>\n     */\n    setLang(langKey) {\n        const newLanguage = this.#languages[langKey];\n        const oldLanguage = this.#currentLanguage;\n\n        if (!helpers.hasKey(langKey, this.#languages)) {\n            console.error(\n                `Lieu | Language key \"${langKey}\" not found in languages!`\n            );\n\n            return;\n        }\n\n        this.#currentLanguage = newLanguage;\n        localStorage.setItem(STORAGE_KEY, langKey);\n\n        this.#localizeDomElems();\n\n        this.#onSetLang(oldLanguage, newLanguage);\n    }\n\n    // Find all data-attributes by attributeName field in DOM, and localize them\n    #localizeDomElems() {\n        const $locales = Array.from(\n            document.querySelectorAll(`[${this.#attributeName}]`)\n        );\n\n        $locales.forEach(($str) => {\n            const locale = $str.getAttribute(this.#attributeName);\n            $str.innerHTML = this.trans(locale);\n        });\n    }\n\n    /**\n     * Return value from currentLanguage.locales or null\n     * @param localeKey<String>\n     * @param options<Object>\n     */\n    trans(localeKey, options) {\n        const { locales } = this.#currentLanguage;\n        let locale = locales[localeKey];\n\n        if (!locale) {\n            locale = localeKey;\n\n            if (this.#isDebug) {\n                console.warn(\n                    `Lieu | Locale key \"${localeKey}\" not found in current language!`\n                );\n            }\n        }\n\n        if (options) {\n            locale = locale.replace(\n                /%\\{(.*?)\\}/g,\n                (match, key) => options[key] || match\n            );\n        }\n\n        return locale;\n    }\n\n    /** Return language object from languages class field by its' key\n    * or current langauge if @param langKey is not set\n    @param langKey<String> not required\n    */\n    getLang(langKey) {\n        this.#onGetLang();\n\n        if (!langKey) {\n            return this.#currentLanguage;\n        }\n\n        if (!helpers.hasKey(langKey, this.#languages)) {\n            console.error(\n                `Lieu | Language key \"${langKey}\" not found in languages!`\n            );\n\n            return;\n        }\n\n        return this.#languages[langKey];\n    }\n\n    // Returns object of all languages\n    getLangs() {\n        return this.#languages;\n    }\n}\n"],"names":["helpers","obj","func","languagesFromJson","JSON","parse","navigator","language","slice","key","Object","keys","indexOf","STORAGE_KEY","isDebug","initialData","languages","currentLanguage","attributeName","onSetLang","newLang","oldLang","onGetLang","constructor","this","init","initLanguages","setAttributeName","setInitialLanguage","setHooks","initialLanguages","userKeyLang","localStorage","getItem","initialLanguage","setLang","langKey","newLanguage","oldLanguage","setItem","localizeDomElems","console","error","Array","from","document","querySelectorAll","forEach","$str","locale","getAttribute","innerHTML","trans","localeKey","options","locales","warn","replace","match","getLang","getLangs"],"mappings":";;;;;qOAAA,MAAMA,EAESC,GACe,iBAARA,EAHhBD,EAOWE,GACc,mBAATA,EARhBF,EAYSC,IACP,IACI,MAAME,EAAoBC,KAAKC,MAAMJ,GAErC,MAAiC,iBAAtBE,EACAA,EAEA,IAId,CAFC,MACE,OAAO,IACV,GAvBHH,EA2Bc,IACLM,UAAUC,SAASC,MAAM,EAAG,GA5BrCR,EAgCM,CAACS,EAAKR,KACgC,IAAnCS,OAAOC,KAAKV,GAAKW,QAAQH,GCjClCI,EAAc,cCML,MACXC,IAAW,EACXC,GAAe,KACfC,GAAa,KACbC,GAAmB,KACnBC,GAEAC,GAAa,CAACC,EAASC,KAAV,EACbC,GAAa,OAEbC,YAAYR,GACRS,MAAKT,EAAeA,EAEpBS,MAAKV,EAAWC,EAAYD,QAE5BU,MAAKC,GACR,CAEDA,KACID,MAAKE,IACLF,MAAKG,IACLH,MAAKI,IACLJ,MAAKK,GAtBa,CA0BtBH,KACI,IAAII,EAAmBN,MAAKT,EAAaC,UAEpChB,EAAiB8B,KAClBA,EAAmB9B,EAAiB8B,IAGxCN,MAAKR,EAAac,CAjCA,CAqCtBD,KACQ7B,EAAmBwB,MAAKT,EAAaI,aACrCK,MAAKL,EAAaK,MAAKT,EAAaI,WAGpCnB,EAAmBwB,MAAKT,EAAaO,aACrCE,MAAKF,EAAaE,MAAKT,EAAaO,UA3CtB,CAgDtBK,KACIH,MAAKN,EAAiBM,MAAKT,EAAaG,eDtDzB,WCKG,CAqDtBU,KAGI,MAAMG,EACFC,aAAaC,QAAQpB,IACrBW,MAAKT,EAAamB,iBAClBlC,IAEAA,EAAe+B,EAAaP,MAAKR,GACjCQ,KAAKW,QAAQJ,GAMbP,KAAKW,QAAQzB,OAAOC,KAAKa,MAAKR,GAAY,GAEjD,CAMDmB,QAAQC,GACJ,MAAMC,EAAcb,MAAKR,EAAWoB,GAC9BE,EAAcd,MAAKP,EAEpBjB,EAAeoC,EAASZ,MAAKR,IAQlCQ,MAAKP,EAAmBoB,EACxBL,aAAaO,QAAQ1B,EAAauB,GAElCZ,MAAKgB,IAELhB,MAAKL,EAAWmB,EAAaD,IAZzBI,QAAQC,MACH,wBAAuBN,6BAlFd,CAiGtBI,KACqBG,MAAMC,KACnBC,SAASC,iBAAkB,IAAGtB,MAAKN,OAG9B6B,SAASC,IACd,MAAMC,EAASD,EAAKE,aAAa1B,MAAKN,GACtC8B,EAAKG,UAAY3B,KAAK4B,MAAMH,EAA5B,GAEP,CAODG,MAAMC,EAAWC,GACb,MAAMC,QAAEA,GAAY/B,MAAKP,EACzB,IAAIgC,EAASM,EAAQF,GAmBrB,OAjBKJ,IACDA,EAASI,EAEL7B,MAAKV,GACL2B,QAAQe,KACH,sBAAqBH,sCAK9BC,IACAL,EAASA,EAAOQ,QACZ,eACA,CAACC,EAAOjD,IAAQ6C,EAAQ7C,IAAQiD,KAIjCT,CACV,CAMDU,QAAQvB,GAGJ,OAFAZ,MAAKF,IAEAc,EAIApC,EAAeoC,EAASZ,MAAKR,GAQ3BQ,MAAKR,EAAWoB,QAPnBK,QAAQC,MACH,wBAAuBN,8BALrBZ,MAAKP,CAjJE,CAgKtB2C,WACI,OAAOpC,MAAKR,CACf"}