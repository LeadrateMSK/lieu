{"version":3,"file":"lieu.js","sources":["../src/core/helpers.js","../src/core/const.js","../src/lieu.js"],"sourcesContent":["class Helpers {\n    // Checks if passed object is object or not\n    static isObject(obj) {\n        return typeof obj === 'object';\n    }\n\n    // Checks if passed object is funcion or not\n    static isFunction(func) {\n        return typeof func === 'function';\n    }\n\n    // Returns parsed from JSON object or null\n    static fromJson(obj) {\n        try {\n            const languagesFromJson = JSON.parse(obj);\n\n            if (this.isObject(languagesFromJson)) {\n                return languagesFromJson;\n            } else {\n                return null;\n            }\n        } catch {\n            return null;\n        }\n    }\n\n    // Return browser language\n    static getBrowserLang() {\n        return navigator.language.slice(0, 2);\n    }\n\n    // Check key existing in object\n    static hasKey(key, obj) {\n        return Object.keys(obj).indexOf(key) !== -1;\n    }\n\n    // Split string by delimiter, returns array<String>\n    static findAllSubstrings(string) {\n        const regexp = /\\|[[{\\d+]/g;\n        const subStrings = [];\n\n        function findDelimiter(str) {\n            const delimiterIndex = str.search(regexp);\n\n            if (delimiterIndex !== -1) {\n                subStrings.push(str.substring(0, delimiterIndex));\n                findDelimiter(str.substring(delimiterIndex + 1));\n            } else {\n                subStrings.push(str);\n            }\n        }\n\n        findDelimiter(string);\n\n        return subStrings;\n    }\n\n    /**\n     * Returns pluralized string depending on passed @param count\n     * @param string<String>\n     * @param count<Number>\n     */\n    static pluralizeString(string, count) {\n        // [num,num] {num,num} [num] {num} [num,*] {num,*}\n        const regex = /[[{]\\d+,{0,1}\\d{0,}\\*{0,1}[\\]}]/g;\n        const subStrings = this.findAllSubstrings(string);\n\n        let locale;\n\n        for (let i = 0; i < subStrings.length; i++) {\n            const subString = subStrings[i];\n            const result = subString.match(regex);\n\n            if (result) {\n                // Set default value for the first time\n                if (!locale) {\n                    locale = subString.replace(regex, '');\n                    continue;\n                }\n\n                const resultNumbers = [];\n\n                // Remove array/obj brackets and split string by comma\n                resultNumbers.push(\n                    ...result[0].replace(/[[{]|[\\]}]/g, '').split(',')\n                );\n\n                // Check if matched plural count more or equal passed count\n                if (resultNumbers.length >= 2) {\n                    if (resultNumbers[1] === '*' && count >= resultNumbers[0]) {\n                        locale = subString.replace(regex, '');\n\n                        break;\n                    } else if (\n                        resultNumbers[0] <= count &&\n                        resultNumbers[1] >= count\n                    ) {\n                        locale = subString.replace(regex, '');\n\n                        break;\n                    }\n                } else {\n                    if (resultNumbers[0] === count) {\n                        locale = subString.replace(regex, '');\n\n                        break;\n                    }\n                }\n            }\n        }\n\n        return locale;\n    }\n}\n\nexport default Helpers;\n","const STORAGE_KEY = 'lieu';\nconst ATTRIBUTE_NAME = 'data-lieu';\n\nexport { STORAGE_KEY, ATTRIBUTE_NAME };\n","import Helpers from './core/helpers';\nimport { STORAGE_KEY, ATTRIBUTE_NAME } from './core/const';\n\n/**\n * @param initialData<Object>\n */\nexport default class Lieu {\n    #isDebug = false; // boolean\n    #initialData = null; // object\n    #languages = null; // object\n    #currentLanguage = null; // object\n    #attributeName; // string\n\n    #onSetLang = (newLang, oldLang) => {};\n    #onGetLang = () => {};\n\n    constructor(initialData) {\n        this.#initialData = initialData;\n\n        this.#isDebug = initialData.isDebug;\n\n        this.#init();\n    }\n\n    #init() {\n        this.#initLanguages();\n        this.#setAttributeName();\n        this.#setInitialLanguage();\n        this.#setHooks();\n    }\n\n    // Set class field languages if languages from initial data is object or json\n    #initLanguages() {\n        let initialLanguages = this.#initialData.languages;\n\n        if (!Helpers.isObject(initialLanguages)) {\n            initialLanguages = Helpers.fromJson(initialLanguages);\n        }\n\n        this.#languages = initialLanguages;\n    }\n\n    // Set hooks if they exist in initial data\n    #setHooks() {\n        if (Helpers.isFunction(this.#initialData.onSetLang)) {\n            this.#onSetLang = this.#initialData.onSetLang;\n        }\n\n        if (Helpers.isFunction(this.#initialData.onGetLang)) {\n            this.#onGetLang = this.#initialData.onGetLang;\n        }\n    }\n\n    // Set custom data attribute\n    #setAttributeName() {\n        this.#attributeName = this.#initialData.attributeName ?? ATTRIBUTE_NAME;\n    }\n\n    // Set initial language from languages\n    #setInitialLanguage() {\n        const userKeyLang =\n            localStorage.getItem(STORAGE_KEY) ?? // from storage\n            this.#initialData.initialLanguage ?? // from options\n            Helpers.getBrowserLang(); // from navigator\n\n        if (Helpers.hasKey(userKeyLang, this.#languages)) {\n            this.setLang(userKeyLang);\n        } else {\n            this.setLang(Object.keys(this.#languages)[0]);\n        }\n    }\n\n    /*\n     * Set new lang by string key from languages class field\n     * @param langKey<String>\n     */\n    setLang(langKey) {\n        const newLanguage = this.#languages[langKey];\n        const oldLanguage = this.#currentLanguage;\n\n        if (!Helpers.hasKey(langKey, this.#languages)) {\n            console.error(\n                `Lieu | Language key \"${langKey}\" not found in languages!`\n            );\n\n            return;\n        }\n\n        this.#currentLanguage = newLanguage;\n        localStorage.setItem(STORAGE_KEY, langKey);\n\n        this.#localizeDomElems();\n\n        this.#onSetLang(oldLanguage, newLanguage);\n    }\n\n    // Find all data-attributes by attributeName field in DOM, and localize them\n    #localizeDomElems() {\n        const $locales = Array.from(\n            document.querySelectorAll(`[${this.#attributeName}]`)\n        );\n\n        $locales.forEach(($str) => {\n            const locale = $str.getAttribute(this.#attributeName);\n            $str.innerHTML = this.trans(locale);\n        });\n    }\n\n    /**\n     * Return value from currentLanguage.locales or null\n     * @param localeKey<String>\n     * @param arg1<String|Object> not required\n     * @param arg2<String|Object> not required\n     */\n    trans(localeKey, arg1, arg2) {\n        const { locales } = this.#currentLanguage;\n        const options = [arg1, arg2];\n\n        let locale = locales[localeKey];\n        let interpolationObj;\n        let pluralNum;\n\n        if (Helpers.isObject(options[0])) {\n            interpolationObj = options[0];\n            pluralNum = options[1];\n        } else {\n            interpolationObj = options[1];\n            pluralNum = options[0];\n        }\n\n        if (!locale) {\n            locale = localeKey;\n\n            if (this.#isDebug) {\n                console.warn(\n                    `Lieu | Locale key \"${localeKey}\" not found in current language!`\n                );\n            }\n        }\n\n        if (interpolationObj) {\n            locale = locale.replace(\n                /%\\{(.*?)\\}/g,\n                (match, key) => interpolationObj[key] || match\n            );\n        }\n\n        if (pluralNum) {\n            locale = Helpers.pluralizeString(locale, pluralNum);\n        }\n\n        return locale;\n    }\n\n    /** Return language object from languages class field by its' key\n     * or current langauge if @param langKey is not set\n     @param langKey<String> not required\n     */\n    getLang(langKey) {\n        this.#onGetLang();\n\n        if (!langKey) {\n            return this.#currentLanguage;\n        }\n\n        if (!Helpers.hasKey(langKey, this.#languages)) {\n            console.error(\n                `Lieu | Language key \"${langKey}\" not found in languages!`\n            );\n\n            return;\n        }\n\n        return this.#languages[langKey];\n    }\n\n    // Returns object of all languages\n    getLangs() {\n        return this.#languages;\n    }\n}\n"],"names":["Helpers","isObject","obj","isFunction","func","fromJson","languagesFromJson","JSON","parse","getBrowserLang","navigator","language","slice","hasKey","key","Object","keys","indexOf","findAllSubstrings","string","regexp","subStrings","findDelimiter","str","delimiterIndex","search","push","substring","pluralizeString","count","regex","locale","i","length","subString","result","match","replace","resultNumbers","split","STORAGE_KEY","ATTRIBUTE_NAME","Lieu","newLang","oldLang","constructor","initialData","isDebug","initialLanguages","languages","onSetLang","onGetLang","attributeName","userKeyLang","localStorage","getItem","initialLanguage","setLang","langKey","newLanguage","oldLanguage","console","error","setItem","$locales","Array","from","document","querySelectorAll","forEach","$str","getAttribute","innerHTML","trans","localeKey","arg1","arg2","locales","options","interpolationObj","pluralNum","warn","getLang","getLangs"],"mappings":"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"}