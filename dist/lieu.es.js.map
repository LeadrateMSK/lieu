{"version":3,"file":"lieu.es.js","sources":["../src/core/Helpers.js","../src/core/const.js","../src/core/index.js"],"sourcesContent":["class Helpers {\n    // Checks if passed object is object or not\n    static isObject(obj) {\n        return typeof obj === 'object';\n    }\n\n    // Checks if passed object is funcion or not\n    static isFunction(obj) {\n        return typeof obj === 'function';\n    }\n\n    /** Returns parsed from JSON object or null\n    @param obj<JSON>\n    */\n    static fromJson(obj) {\n        try {\n            const languagesFromJson = JSON.parse(obj);\n\n            if (this.isObject(languagesFromJson)) {\n                return languagesFromJson;\n            } else {\n                return null;\n            }\n        } catch {\n            return null;\n        }\n    }\n}\n\nexport default Helpers;\n","const STORAGE_KEY = 'lieu';\nconst ATTRIBUTE_NAME = 'data-lieu';\n\nexport { STORAGE_KEY, ATTRIBUTE_NAME };\n","import Helpers from './Helpers';\r\nimport { STORAGE_KEY, ATTRIBUTE_NAME } from './const';\r\n\r\n/**\r\n * @param initialData<Object>\r\n */\r\nexport default class Lieu {\r\n    #initialData = null; // object\r\n    #languages = null; // object\r\n    #currentLanguage = null; // object\r\n    #initialLanguage = null; // string\r\n    #attributeName = ATTRIBUTE_NAME; // string\r\n\r\n    #onSetLang = (newLang, oldLang) => {};\r\n    #onGetLang = () => {};\r\n\r\n    constructor(initialData) {\r\n        this.#initialData = initialData;\r\n\r\n        this.#initLieu();\r\n    }\r\n\r\n    // Class initialization\r\n    #initLieu() {\r\n        this.#initLanguages();\r\n        this.#setHooks();\r\n        this.#setAttributeName();\r\n        this.#setInitialLanguage();\r\n    }\r\n\r\n    // Set class field languages if languages from inittial data is object or json\r\n    #initLanguages() {\r\n        let initialLanguages = this.#initialData?.languages;\r\n\r\n        if (Helpers.isObject(initialLanguages)) {\r\n            this.#setLanguages(initialLanguages);\r\n        } else {\r\n            initialLanguages = Helpers.fromJson(initialLanguages); // return null if lang not in json\r\n\r\n            this.#setLanguages(initialLanguages);\r\n        }\r\n    }\r\n\r\n    // Set hooks if they exist in inital data\r\n    #setHooks() {\r\n        if (Helpers.isFunction(this.#initialData.onSetLang)) {\r\n            this.#onSetLang = this.#initialData.onSetLang;\r\n        }\r\n\r\n        if (Helpers.isFunction(this.#initialData.onGetLang)) {\r\n            this.#onGetLang = this.#initialData.onGetLang;\r\n        }\r\n    }\r\n\r\n    // Set custom data attribute\r\n    #setAttributeName() {\r\n        const attr = this.#initialData?.attributeName;\r\n\r\n        if (attr) {\r\n            this.#attributeName = attr;\r\n        }\r\n    }\r\n\r\n    /** Set languages from initial data in languages class field\r\n    @param langs<Object>\r\n    */\r\n    #setLanguages(langs) {\r\n        this.#languages = langs;\r\n    }\r\n\r\n    // Set initial language from languages\r\n    #setInitialLanguage() {\r\n        const langKeys = Object.keys(this.#languages);\r\n        const initialLangName = this.#initialData.initialLanguage;\r\n\r\n        if (initialLangName) {\r\n            for (let i = 0; i < langKeys.length; i++) {\r\n                if (initialLangName.includes(langKeys[i])) {\r\n                    this.#initialLanguage = initialLangName;\r\n\r\n                    this.setLang(initialLangName);\r\n\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            this.#setInitialLanguageAuto();\r\n        }\r\n    }\r\n\r\n    // Set initial language if initial language is not set in initial data\r\n    #setInitialLanguageAuto() {\r\n        // Todo improve\r\n        const storageLangKey = window.localStorage?.getItem(STORAGE_KEY);\r\n        const langKeys = Object.keys(this.#languages);\r\n        let langKey = langKeys[0];\r\n\r\n        if (storageLangKey) {\r\n            for (let i = 0; i < langKeys.length; i++) {\r\n                if (langKeys[i] === storageLangKey) {\r\n                    langKey = storageLangKey;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.#initialLanguage = langKey;\r\n\r\n        this.setLang(langKey);\r\n    }\r\n\r\n    /** Set new lang by string key from languages class field\r\n    @param langKey<String>\r\n    */\r\n    setLang(langKey) {\r\n        const oldLang = this.#currentLanguage;\r\n\r\n        this.#currentLanguage = this.#languages[langKey];\r\n        window.localStorage?.setItem(STORAGE_KEY, langKey);\r\n\r\n        this.#localizeDomElems();\r\n\r\n        this.#onSetLang(oldLang, this.#currentLanguage);\r\n    }\r\n\r\n    // Find all data-attributes by attributeName field in DOM, and localize them\r\n    #localizeDomElems() {\r\n        const localeElems = Array.from(\r\n            document.querySelectorAll(`[${this.#attributeName}]`)\r\n        );\r\n\r\n        const { locales } = this.#currentLanguage;\r\n\r\n        localeElems.forEach((elem) => {\r\n            const locale = elem.getAttribute(this.#attributeName);\r\n\r\n            const localeText = locales[locale];\r\n\r\n            elem.innerHTML = localeText;\r\n        });\r\n    }\r\n\r\n    /** Return value from currentLanguage.locales or null\r\n    @param localeKey<String>\r\n    */\r\n    localize(localeKey) {\r\n        const { locales } = this.#currentLanguage;\r\n\r\n        return locales[localeKey];\r\n    }\r\n\r\n    /** Return value from currentLanguage.locales or null\r\n    @param localeKey<String>\r\n    */\r\n    __(localeKey) {\r\n        return this.localize(localeKey);\r\n    }\r\n\r\n    // Return browser language\r\n    getBrowserLang() {\r\n        return navigator?.language;\r\n    }\r\n\r\n    /** Return language object from languages class field by its' key\r\n    * or current langauge if @param langKey is not set\r\n    @param langKey<String> not required\r\n    */\r\n    getLang(langKey) {\r\n        this.#onGetLang();\r\n\r\n        if (langKey) {\r\n            return this.#languages[langKey];\r\n        }\r\n\r\n        return this.#currentLanguage;\r\n    }\r\n\r\n    // Returns object of all languages\r\n    getLangs() {\r\n        return this.#languages;\r\n    }\r\n\r\n    // Returns string of initial language\r\n    getInitialLang() {\r\n        return this.#initialLanguage;\r\n    }\r\n}\r\n"],"names":["Helpers","isObject","obj","isFunction","fromJson","languagesFromJson","JSON","parse","STORAGE_KEY","ATTRIBUTE_NAME","Lieu","newLang","oldLang","constructor","initialData","initialLanguages","languages","onSetLang","onGetLang","attr","attributeName","langs","langKeys","Object","keys","initialLangName","initialLanguage","i","length","includes","setLang","storageLangKey","window","localStorage","getItem","langKey","setItem","localeElems","Array","from","document","querySelectorAll","locales","forEach","elem","locale","getAttribute","localeText","innerHTML","localize","localeKey","__","getBrowserLang","navigator","language","getLang","getLangs","getInitialLang"],"mappings":"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"}